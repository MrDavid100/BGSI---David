--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 14 | Scripts: 4 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.BGSI Script - David
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["Name"] = [[BGSI Script - David]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.BGSI Script - David.Frame
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(64, 64, 64);
G2L["2"]["Size"] = UDim2.new(0, 377, 0, 395);
G2L["2"]["Position"] = UDim2.new(0.34224, 0, 0.21168, 0);
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.BGSI Script - David.Frame.TextLabel
G2L["3"] = Instance.new("TextLabel", G2L["2"]);
G2L["3"]["TextWrapped"] = true;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["TextSize"] = 14;
G2L["3"]["TextScaled"] = true;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(92, 92, 92);
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["Size"] = UDim2.new(0, 243, 0, 50);
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Text"] = [[Bubble gum simulator V.0.1]];
G2L["3"]["Position"] = UDim2.new(0.17772, 0, 0.01519, 0);


-- StarterGui.BGSI Script - David.Frame.LocalScript
G2L["4"] = Instance.new("LocalScript", G2L["2"]);



-- StarterGui.BGSI Script - David.Frame.Auto Sell
G2L["5"] = Instance.new("TextButton", G2L["2"]);
G2L["5"]["TextWrapped"] = true;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["TextSize"] = 14;
G2L["5"]["TextScaled"] = true;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["Size"] = UDim2.new(0, 75, 0, 50);
G2L["5"]["Name"] = [[Auto Sell]];
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Text"] = [[❌]];
G2L["5"]["Position"] = UDim2.new(0.74307, 0, 0.5901, 0);


-- StarterGui.BGSI Script - David.Frame.Auto Sell.LocalScript
G2L["6"] = Instance.new("LocalScript", G2L["5"]);



-- StarterGui.BGSI Script - David.Frame.Auto Bubble
G2L["7"] = Instance.new("TextButton", G2L["2"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextScaled"] = true;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 78, 0, 50);
G2L["7"]["Name"] = [[Auto Bubble]];
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[❌]];
G2L["7"]["Position"] = UDim2.new(0.74056, 0, 0.24328, 0);


-- StarterGui.BGSI Script - David.Frame.Auto Bubble.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.BGSI Script - David.Frame.TextLabel
G2L["9"] = Instance.new("TextLabel", G2L["2"]);
G2L["9"]["TextWrapped"] = true;
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextScaled"] = true;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = [[Auto Bubble]];
G2L["9"]["Position"] = UDim2.new(0.04775, 0, 0.24304, 0);


-- StarterGui.BGSI Script - David.Frame.TextLabel
G2L["a"] = Instance.new("TextLabel", G2L["2"]);
G2L["a"]["TextWrapped"] = true;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextSize"] = 13;
G2L["a"]["TextScaled"] = true;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[Auto Sell]];
G2L["a"]["Position"] = UDim2.new(0.04775, 0, 0.58987, 0);


-- StarterGui.BGSI Script - David.Frame.UICorner
G2L["b"] = Instance.new("UICorner", G2L["2"]);



-- StarterGui.BGSI Script - David.Frame.David
G2L["c"] = Instance.new("TextLabel", G2L["2"]);
G2L["c"]["TextWrapped"] = true;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextSize"] = 14;
G2L["c"]["TextScaled"] = true;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(73, 73, 73);
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Text"] = [[By David..]];
G2L["c"]["Name"] = [[David]];
G2L["c"]["Position"] = UDim2.new(0.23607, 0, 0.82532, 0);


-- StarterGui.BGSI Script - David.Frame.TextLabel
G2L["d"] = Instance.new("TextLabel", G2L["2"]);
G2L["d"]["TextWrapped"] = true;
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextSize"] = 14;
G2L["d"]["TextScaled"] = true;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(81, 81, 81);
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[Right shift to close]];
G2L["d"]["Position"] = UDim2.new(1, 0, 0.43544, 0);


-- StarterGui.BGSI Script - David.LocalScript
G2L["e"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.BGSI Script - David.Frame.LocalScript
local function C_4()
local script = G2L["4"];
	local frame = script.Parent
	local button = frame:FindFirstChild("Button")  -- Find the button inside the frame
	local userInputService = game:GetService("UserInputService")
	
	local dragging = false
	local dragStart
	local startPos
	
	local function updateInput(input)
		if dragging then
			local delta = input.Position - dragStart
			local newPosition = UDim2.new(
				startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y
			)
			-- Update the frame's position
			frame.Position = newPosition
	
			-- Update button's position relative to the frame
			if button then
				button.Position = UDim2.new(0.5, -button.Size.X.Offset / 2, 0.5, -button.Size.Y.Offset / 2)  -- Adjust button position
			end
		end
	end
	
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then -- Left Click
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			updateInput(input)
		end
	end)
	
end;
task.spawn(C_4);
-- StarterGui.BGSI Script - David.Frame.Auto Sell.LocalScript
local function C_6()
local script = G2L["6"];
	local button = script.Parent
	local userInputService = game:GetService("UserInputService")
	
	local autoSelling = false
	
	-- Function to start AutoSell
	local function startAutoSell()
		_G.AutoSellBubble = true
	
		while _G.AutoSellBubble == true do
			task.wait(0.1)
			local args = {
				[1] = "SellBubble"
			}
	
			game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer(unpack(args))
		end
	end
	
	-- Function to stop AutoSell
	local function stopAutoSell()
		_G.AutoSellBubble = false
	end
	
	-- Toggle button state and AutoSell
	button.MouseButton1Click:Connect(function()
		if not autoSelling then
			-- Start AutoSell and change button to ✅
			autoSelling = true
			button.Text = "✅"
			task.spawn(startAutoSell) -- run it without freezing
		else
			-- Stop AutoSell and change button to ❌
			autoSelling = false
			button.Text = "❌"
			stopAutoSell() -- Stop AutoSell
		end
	end)
	
end;
task.spawn(C_6);
-- StarterGui.BGSI Script - David.Frame.Auto Bubble.LocalScript
local function C_8()
local script = G2L["8"];
	local button = script.Parent
	local userInputService = game:GetService("UserInputService")
	
	local autoBlowing = false
	
	-- Function to start AutoBlowBubble
	local function startAutoBlowBubble()
		_G.AutoBlowBubble = true
	
		while _G.AutoBlowBubble == true do
			task.wait(0.1)
			local args = {
				[1] = "BlowBubble"
			}
	
			game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer(unpack(args))
		end
	end
	
	-- Function to stop AutoBlowBubble
	local function stopAutoBlowBubble()
		_G.AutoBlowBubble = false
	end
	
	-- Toggle button state and AutoBlowBubble
	button.MouseButton1Click:Connect(function()
		if not autoBlowing then
			-- Start AutoBlowBubble and change button to ✅
			autoBlowing = true
			button.Text = "✅"
			task.spawn(startAutoBlowBubble) -- run it without freezing
		else
			-- Stop AutoBlowBubble and change button to ❌
			autoBlowing = false
			button.Text = "❌"
			stopAutoBlowBubble() -- Stop AutoBlowBubble
		end
	end)
	
end;
task.spawn(C_8);
-- StarterGui.BGSI Script - David.LocalScript
local function C_e()
local script = G2L["e"];
	local userInputService = game:GetService("UserInputService")
	local frame = script.Parent:WaitForChild("Frame")  -- Wait for the Frame inside ScreenGui
	local isFrameOpen = true  -- Track whether the frame is visible or not
	
	-- Set the initial visibility of the frame
	frame.Visible = isFrameOpen
	
	-- Function to toggle the visibility of the frame when Right Shift is pressed
	userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
		if gameProcessedEvent then return end  -- Ignore if the game already processed the input
	
		-- Check if the pressed key is Right Shift
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.RightShift then
			-- Toggle the visibility of the frame
			isFrameOpen = not isFrameOpen
			frame.Visible = isFrameOpen
		end
	end)
	
end;
task.spawn(C_e);

return G2L["1"], require;
